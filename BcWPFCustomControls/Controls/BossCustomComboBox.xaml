<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:BcWPFCustomControls.Controls"
                    xmlns:services="clr-namespace:BcWPFCustomControls.Services"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:converters="clr-namespace:BcWpfCommon.Converters;assembly=BcWpfCommon">

    <converters:BooleanOrConverter x:Key="BooleanOrConverter" />
    <Style TargetType="{x:Type local:BossCustomComboBox}">
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="Validation.ErrorTemplate">
                    <Setter.Value>
                        <ControlTemplate>
                            <StackPanel Orientation="Horizontal">
                                <Border BorderThickness="2"
                                        BorderBrush="#FFdc000c"
                                        CornerRadius="2"
                                        VerticalAlignment="Top">
                                    <Grid>
                                        <Polygon x:Name="toolTipCorner"
                                            Cursor="ScrollSW"
                                            Grid.ZIndex="2"
                                            Margin="-1,-3,5,0"
                                            Points="0,0 9,12, 0,23"
                                            Fill="#FFdc000c"
                                            HorizontalAlignment="Right"
                                            VerticalAlignment="Top"
                                            IsHitTestVisible="True">
                                            <Polygon.RenderTransform>
                                                <RotateTransform CenterX="0" CenterY="0" Angle="315" />
                                            </Polygon.RenderTransform>
                                        </Polygon>
                                        <AdornedElementPlaceholder x:Name="adorner">
                                        </AdornedElementPlaceholder>
                                    </Grid>
                                </Border>
                                <Border x:Name="errorBorder" Background="#FFdc000c" Margin="1,0,0,0"
                                    Opacity="0" CornerRadius="1.5"
                                    IsHitTestVisible="False"
                                    MinHeight="24" MaxWidth="267">
                                    <Border.Effect>
                                        <DropShadowEffect ShadowDepth="2.25"
                                        Color="Black"
                                        Opacity="0.4"
                                        Direction="315"
                                        BlurRadius="4" />
                                    </Border.Effect>
                                    <TextBlock Text="{Binding ElementName=adorner,
                                        Path=AdornedElement.(Validation.Errors)[0].ErrorContent}"
                                               Foreground="White"
                                               Margin="8,3,8,3" TextWrapping="Wrap" />
                                </Border>
                            </StackPanel>
                            <ControlTemplate.Triggers>
                                <DataTrigger Value="True">
                                    <DataTrigger.Binding>
                                        <MultiBinding Converter="{StaticResource BooleanOrConverter}">
                                            <Binding ElementName="adorner" Path="AdornedElement.IsKeyboardFocused" />
                                            <Binding ElementName="toolTipCorner" Path="IsMouseOver" />
                                        </MultiBinding>
                                    </DataTrigger.Binding>
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard x:Name="fadeInStoryboard">
                                            <Storyboard>
                                                <DoubleAnimation Duration="00:00:00.15"
                                         Storyboard.TargetName="errorBorder"
                                         Storyboard.TargetProperty="Opacity"
                                         To="1" />
                                                <ThicknessAnimation Duration="00:00:00.15"
                                            Storyboard.TargetName="errorBorder"
                                            Storyboard.TargetProperty="Margin"
                                            FillBehavior="HoldEnd"
                                            From="1,0,0,0"
                                            To="5,0,0,0">
                                                    <ThicknessAnimation.EasingFunction>
                                                        <BackEase EasingMode="EaseOut" Amplitude="2" />
                                                    </ThicknessAnimation.EasingFunction>
                                                </ThicknessAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <StopStoryboard BeginStoryboardName="fadeInStoryboard" />
                                        <BeginStoryboard x:Name="fadeOutStoryBoard">
                                            <Storyboard>
                                                <DoubleAnimation Duration="00:00:00"
                                         Storyboard.TargetName="errorBorder"
                                         Storyboard.TargetProperty="Opacity"
                                         To="0" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.ExitActions>
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter Property="FocusManager.FocusedElement" Value="{Binding ElementName=CustomComboBox}" />
            </Trigger>
            <Trigger Property="IsReadOnly" Value="True">
                <Setter Property="MaxDropDownHeight" Value="0" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:BossCustomComboBox}">
                    <Grid Background="#DDEDFA">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <ComboBox
                            Name="CustomComboBox"
                            Grid.Row="1"
                            ItemsSource="{TemplateBinding ItemsSource}"
                            FocusManager.FocusedElement="{Binding ElementName=CustomComboBox}"
                            SelectedValuePath="{TemplateBinding SelectedValuePath}"
                            DisplayMemberPath="{TemplateBinding DisplayMemberPath}"
                            SelectedValue="{
                                Binding CustomComboBoxText,
                                Mode=TwoWay,
                                UpdateSourceTrigger=Explicit,
                                ValidatesOnExceptions=True,
                                RelativeSource={RelativeSource TemplatedParent}}"
                            IsEditable="{TemplateBinding IsEditable}"
                            StaysOpenOnEdit ="True"
                            IsDropDownOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            MaxDropDownHeight="{TemplateBinding MaxDropDownHeight}"                            
                            >
                            <ComboBox.Resources>
                                <ResourceDictionary Source="templates\BossCustomComboBoxTemplate.xaml"/>
                            </ComboBox.Resources>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseDoubleClick">
                                    <i:InvokeCommandAction
                                        Command="{
                                            Binding ComboBoxMouseDoubleClick,
                                            UpdateSourceTrigger=Explicit,
                                            RelativeSource={RelativeSource TemplatedParent}}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <services:WatermarkService.Watermark>
                                <TextBlock 
                                        HorizontalAlignment="{Binding Path=WatermarkHorizontalAlignment, RelativeSource={RelativeSource TemplatedParent}}">
                                    <TextBlock.Text>
                                        <Binding 
                                                Path="PlaceholderText"
                                                RelativeSource="{RelativeSource TemplatedParent}">
                                        </Binding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </services:WatermarkService.Watermark>

                        </ComboBox>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>