<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:services="clr-namespace:BcWPFCustomControls.Services"
                    xmlns:control="clr-namespace:BcWPFCustomControls.Controls"
                    xmlns:converters="clr-namespace:BcWpfCommon.Converters;assembly=BcWpfCommon">

    <converters:BooleanOrConverter x:Key="BooleanOrConverter" />
    <converters:InverseBooleanConverter x:Key="InverseBooleanConverter" />
    <Style TargetType="{x:Type control:BossCustomTextBox}">
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="Validation.ErrorTemplate">
                    <Setter.Value>
                        <ControlTemplate>
                            <StackPanel Orientation="Horizontal">
                                <Border BorderThickness="2" 
                                        BorderBrush="#FFdc000c" 
                                        CornerRadius="2" 
                                        VerticalAlignment="Top" >
                                    <Grid>
                                        <Polygon x:Name="toolTipCorner"
                                            Cursor="ScrollSW"
                                            Grid.ZIndex="2"
                                            Margin="-1,-3,5,0"                                          
                                            Points="0,0 9,12, 0,23"
                                            Fill="#FFdc000c" 
                                            HorizontalAlignment="Right" 
                                            VerticalAlignment="Top"
                                            IsHitTestVisible="True">
                                            <Polygon.RenderTransform>
                                                <RotateTransform CenterX="0" CenterY="0" Angle="315" />
                                            </Polygon.RenderTransform>
                                        </Polygon>
                                        <AdornedElementPlaceholder x:Name="adorner" >
                                        </AdornedElementPlaceholder>
                                    </Grid>
                                </Border>
                                <Border x:Name="errorBorder" Background="#FFdc000c" Margin="1,0,0,0"
                                    Opacity="0" CornerRadius="1.5"
                                    IsHitTestVisible="False"
                                    MinHeight="24" MaxWidth="267">
                                    <Border.Effect>
                                        <DropShadowEffect ShadowDepth="2.25" 
                                        Color="Black" 
                                        Opacity="0.4"
                                        Direction="315"
                                        BlurRadius="4"/>
                                    </Border.Effect>
                                    <TextBlock Text="{Binding ElementName=adorner,
                                        Path=AdornedElement.(Validation.Errors)[0].ErrorContent}" 
                                               Foreground="White" Margin="8,3,8,3" 
                                               TextWrapping="Wrap"/>
                                </Border>
                            </StackPanel>
                            <ControlTemplate.Triggers>
                                <DataTrigger Value="True">
                                    <DataTrigger.Binding>
                                        <MultiBinding Converter="{StaticResource BooleanOrConverter}">
                                            <Binding ElementName="adorner" Path="AdornedElement.IsKeyboardFocused" />
                                            <Binding ElementName="toolTipCorner" Path="IsMouseOver"/>
                                        </MultiBinding>
                                    </DataTrigger.Binding>
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard x:Name="fadeInStoryboard">
                                            <Storyboard>
                                                <DoubleAnimation Duration="00:00:00.15"
                                         Storyboard.TargetName="errorBorder"
                                         Storyboard.TargetProperty="Opacity"
                                         To="1"/>
                                                <ThicknessAnimation Duration="00:00:00.15"
                                            Storyboard.TargetName="errorBorder"
                                            Storyboard.TargetProperty="Margin"
                                            FillBehavior="HoldEnd"
                                            From="1,0,0,0"
                                            To="5,0,0,0">
                                                    <ThicknessAnimation.EasingFunction>
                                                        <BackEase EasingMode="EaseOut" Amplitude="2"/>
                                                    </ThicknessAnimation.EasingFunction>
                                                </ThicknessAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <StopStoryboard BeginStoryboardName="fadeInStoryboard"/>
                                        <BeginStoryboard x:Name="fadeOutStoryBoard">
                                            <Storyboard>
                                                <DoubleAnimation Duration="00:00:00"
                                         Storyboard.TargetName="errorBorder"
                                         Storyboard.TargetProperty="Opacity"
                                         To="0"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.ExitActions>
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
        <Setter Property="Focusable" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type control:BossCustomTextBox}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <TextBox 
                                Grid.Column="0" 
                                VerticalContentAlignment="Center"
                                Padding="2,3,2,3"
                                IsTabStop="{TemplateBinding IsReadOnly, Converter={StaticResource InverseBooleanConverter}}">
                                <TextBox.Text>
                                    <Binding Path="Text" 
                                             NotifyOnValidationError="True"  
                                             ValidatesOnExceptions="True"  
                                             UpdateSourceTrigger="PropertyChanged" 
                                             RelativeSource="{RelativeSource TemplatedParent}">
                                        <Binding.ValidationRules>
                                            <ExceptionValidationRule ValidatesOnTargetUpdated="False" />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                                <services:WatermarkService.Watermark>
                                    <TextBlock 
                                        HorizontalAlignment="{Binding Path=WatermarkHorizontalAlignment, RelativeSource={RelativeSource TemplatedParent}}">
                                        <TextBlock.Text>
                                            <Binding 
                                                Path="PlaceholderText"
                                                RelativeSource="{RelativeSource TemplatedParent}">
                                            </Binding>
                                        </TextBlock.Text>
                                    </TextBlock>
                                </services:WatermarkService.Watermark>
                            </TextBox>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>